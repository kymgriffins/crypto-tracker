{"version":3,"sources":["Coin.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","price","volume","symbol","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","console","log","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","current_price","total_volume","price_change_percentage_24h","market_cap","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAkCeA,EAhCF,SAAC,GAQP,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,MACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,YACAC,EACI,EADJA,UAEA,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BH,OAE9B,sBAAKG,UAAU,YAAf,UACE,oBAAGA,UAAU,aAAb,cAA4BL,KAC5B,oBAAGK,UAAU,cAAb,cAA6BJ,EAAOO,oBACnCL,EAAc,EACb,oBAAGE,UAAU,sBAAb,UAAoCF,EAAYM,QAAQ,GAAxD,QAEA,oBAAGJ,UAAU,wBAAb,UAAsCF,EAAYM,QAAQ,GAA1D,OAEF,oBAAGJ,UAAU,iBAAb,qBAAuCD,EAAUI,6BC8B5CE,MAlDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACAC,qBAAU,WACRC,IACGC,IACC,4HAEDC,MAAK,SAACC,GACLP,EAASO,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,YAGtB,IAGMG,EAAgBZ,EAAMa,QAAO,SAACC,GAAD,OACjCA,EAAK5B,KAAK6B,cAAcC,SAASd,EAAOa,kBAE1C,OACE,sBAAKtB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,6BACA,+BACE,uBACEwB,KAAK,OACLC,YAAY,SACZzB,UAAU,aACV0B,SAfW,SAACC,GACpBjB,EAAUiB,EAAEC,OAAOC,eAkBhBV,EAAcW,KAAI,SAACT,GAClB,OACE,cAAC,EAAD,CAEE5B,KAAM4B,EAAK5B,KACXC,MAAO2B,EAAK3B,MACZG,OAAQwB,EAAKxB,OACbF,MAAO0B,EAAKU,cACZnC,OAAQyB,EAAKW,aACblC,YAAauB,EAAKY,4BAClBlC,UAAWsB,EAAKa,YAPXb,EAAKc,WC9BPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a02c5dc4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Coin.css\";\r\nconst Coin = ({\r\n  name,\r\n  image,\r\n  price,\r\n  volume,\r\n  symbol,\r\n  priceChange,\r\n  marketcap,\r\n}) => {\r\n  return (\r\n    <div className=\"coin-container\">\r\n      <div className=\"coin-row\">\r\n        <div className=\"coin\">\r\n          <img src={image} alt=\"crypto\" />\r\n          <h1>{name}</h1>\r\n          <p className=\"coin-symbol\">{symbol}</p>\r\n        </div>\r\n        <div className=\"coin-data\">\r\n          <p className=\"coin-price\">${price}</p>\r\n          <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n          {priceChange < 0 ? (\r\n            <p className=\"coin-percentage red\">{priceChange.toFixed(2)} %</p>\r\n          ) : (\r\n            <p className=\"coin-percentage green\">{priceChange.toFixed(2)}%</p>\r\n          )}\r\n          <p className=\"coin-marketcap\"> Mkt : ${marketcap.toLocaleString()}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import \"./App.css\";\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Coin from \"./Coin\";\n\n// API https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n      )\n      .then((res) => {\n        setCoins(res.data);\n        console.log(res.data);\n      });\n  });\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n  const filteredCoins = coins.filter((coin) =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n  );\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">Search Currency</h1>\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"coin-input\"\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n      {filteredCoins.map((coin) => {\n        return (\n          <Coin\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            price={coin.current_price}\n            volume={coin.total_volume}\n            priceChange={coin.price_change_percentage_24h}\n            marketcap={coin.market_cap}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}